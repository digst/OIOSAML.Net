//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Saml2.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dk.nita.saml20.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access Denied.
        /// </summary>
        internal static string AccessDenied {
            get {
                return ResourceManager.GetString("AccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS DENIED: The value for a required authorization rule grant was missing or empty.  User={0}; Service={1}; Method={2}; CapabilityValue={3}; AzRule={4}; Argument={5}.
        /// </summary>
        internal static string AccessDeniedAzRuleGrantMissing {
            get {
                return ResourceManager.GetString("AccessDeniedAzRuleGrantMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS DENIED: Evaluation of an authorization rule returned &apos;false&apos;. User={0}; Service={1}; Method={2}; Capability/AzRule={3}.
        /// </summary>
        internal static string AccessDeniedAzRuleResultFalse {
            get {
                return ResourceManager.GetString("AccessDeniedAzRuleResultFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS DENIED: There are no required capabilities defined for the service {0} and default access for everyone is disallowed.
        /// </summary>
        internal static string AccessDeniedEveryoneAccessDisallowed {
            get {
                return ResourceManager.GetString("AccessDeniedEveryoneAccessDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS DENIED: The caller does not have a required capability. User={0}; Service={1}; Method={2}; Capability={3}.
        /// </summary>
        internal static string AccessDeniedRequiredCapabilityMissing {
            get {
                return ResourceManager.GetString("AccessDeniedRequiredCapabilityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ACCESS DENIED: Expected tokenversion {2} actual tokenversion {3}. 
        ///User={0}
        ///AppID={1}.
        /// </summary>
        internal static string AccessDeniedTokenVersionNotAllowed {
            get {
                return ResourceManager.GetString("AccessDeniedTokenVersionNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AUDIT: Service method invoked. User={0}; Service={1}; Method={2}.
        /// </summary>
        internal static string AccessGranted {
            get {
                return ResourceManager.GetString("AccessGranted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assertion is no longer valid..
        /// </summary>
        internal static string AssertionExpired {
            get {
                return ResourceManager.GetString("AssertionExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SAML token must have an AssertionID..
        /// </summary>
        internal static string AssertionIDAttributeMissing {
            get {
                return ResourceManager.GetString("AssertionIDAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token must contain an assurance level..
        /// </summary>
        internal static string AssuranceLevelMissing {
            get {
                return ResourceManager.GetString("AssuranceLevelMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: {0} attribute is required on {1}: {2} element..
        /// </summary>
        internal static string AttributeMissing {
            get {
                return ResourceManager.GetString("AttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: attribute value not specified for SAML attribute {0}: {1}..
        /// </summary>
        internal static string AttributeXmlError {
            get {
                return ResourceManager.GetString("AttributeXmlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SAML token must specify an authentication instant..
        /// </summary>
        internal static string AuthenticationInstantMissing {
            get {
                return ResourceManager.GetString("AuthenticationInstantMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SAML token must have an authentication method..
        /// </summary>
        internal static string AuthenticationMethodMissing {
            get {
                return ResourceManager.GetString("AuthenticationMethodMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request for a SAML token contained a base token of an unsupported type..
        /// </summary>
        internal static string BaseTokenNotSupported {
            get {
                return ResourceManager.GetString("BaseTokenNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An errror occurred. No known binding has been registered for this endpoint..
        /// </summary>
        internal static string BindingError {
            get {
                return ResourceManager.GetString("BindingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the identity provider of your choice from the list below:.
        /// </summary>
        internal static string ChooseDesc {
            get {
                return ResourceManager.GetString("ChooseDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose Identity Provider.
        /// </summary>
        internal static string ChooseIDP {
            get {
                return ResourceManager.GetString("ChooseIDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Saml token must contain conditions..
        /// </summary>
        internal static string ConditionsMissing {
            get {
                return ResourceManager.GetString("ConditionsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration element {0} under configuration element {1} missing in config file.
        /// </summary>
        internal static string ConfigurationElementMissing {
            get {
                return ResourceManager.GetString("ConfigurationElementMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error loading the WseSaml configuration section..
        /// </summary>
        internal static string ConfigurationSectionError {
            get {
                return ResourceManager.GetString("ConfigurationSectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration section {0} missing in config file.
        /// </summary>
        internal static string ConfigurationSectionMissing {
            get {
                return ResourceManager.GetString("ConfigurationSectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The static members of the WebServicesConfiguration class cannot be accessed, because the WseSaml configuration section handler has not finished initializing..
        /// </summary>
        internal static string ConfigurationSectionNotInitialized {
            get {
                return ResourceManager.GetString("ConfigurationSectionNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create the policy cache directory. Ensure that the directory {0} exists and that the service account has full access to it.
        /// </summary>
        internal static string CreatePolicyCacheDirError {
            get {
                return ResourceManager.GetString("CreatePolicyCacheDirError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A custom URI must be specified in the &apos;issuerCustomAppliesTo&apos; attribute when the &apos;issuerAppliesToType&apos; is set to &apos;custom&apos;. .
        /// </summary>
        internal static string CustomAppliesToMissing {
            get {
                return ResourceManager.GetString("CustomAppliesToMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A custom URI must be specified in the &apos;issuerCustomAppliesTo&apos; attribute when the &apos;issuerAppliesToType&apos; is set to &apos;custom&apos;. .
        /// </summary>
        internal static string CustomAppliesToMissing1 {
            get {
                return ResourceManager.GetString("CustomAppliesToMissing1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RequestSecurityToken message must be signed with a token which supports Data Encryption since the SamlTokenService uses that signing token to encrypt the key..
        /// </summary>
        internal static string DataEncryptionTokenSupport {
            get {
                return ResourceManager.GetString("DataEncryptionTokenSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body{
        ///	font-family: Verdana;
        ///	color: 555555;
        ///	font-size: 10pt;
        ///	text-align: center;	
        ///}
        ///
        ///#mainPanel{
        ///	width: 70%;
        ///}
        ///
        ///#headerPanel{
        ///	width: 100%;
        ///	margin: 0px 0px 0px 0px;
        ///	padding: 10px 10px 10px 10px;
        ///	background-color: #CCCCCC;
        ///	border-top: thin solid #B50000;
        ///	border-left: thin solid #B50000;
        ///	border-right: thin solid #B50000;
        ///	font-size: 14px;
        ///	font-weight: bold;
        ///}
        ///
        ///#bodyPanel{
        ///	width: 100%;
        ///	margin: 0px 0px 0px 0px;
        ///	padding: 10px 10px 10px 10px;
        ///	border-bottom: thin solid #B5 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultStyle {
            get {
                return ResourceManager.GetString("DefaultStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received bad level os assurance value: &quot;{0}&quot;. Valid values are &quot;Low&quot;, &quot;Substantial&quot;, &quot;High&quot;..
        /// </summary>
        internal static string DemandingLevelOfAssuranceError {
            get {
                return ResourceManager.GetString("DemandingLevelOfAssuranceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received bad profile demand value: &quot;{0}&quot;. Valid values are &quot;Professional&quot;, &quot;Person&quot;..
        /// </summary>
        internal static string DemandingProfileError {
            get {
                return ResourceManager.GetString("DemandingProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one EncryptedKeyToken is present in the security header of the incoming message, but only one was expected..
        /// </summary>
        internal static string DuplicateEncryptedKeyToken {
            get {
                return ResourceManager.GetString("DuplicateEncryptedKeyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one SamlFederationToken is present in the security header of the incoming message, but only one was expected..
        /// </summary>
        internal static string DuplicateSamlFederationToken {
            get {
                return ResourceManager.GetString("DuplicateSamlFederationToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one SamlToken is present in the security header of the incoming message, but only one was expected..
        /// </summary>
        internal static string DuplicateSamlToken {
            get {
                return ResourceManager.GetString("DuplicateSamlToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: a SAML token must contain a {0}:{1} element as a child of {2}: {3}..
        /// </summary>
        internal static string ElementMissing {
            get {
                return ResourceManager.GetString("ElementMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: the children of the {0}: {1} element are not in proper order..
        /// </summary>
        internal static string ElementsOutOfOrder {
            get {
                return ResourceManager.GetString("ElementsOutOfOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EncryptedKeyToken is expected in the active SAML federation scenario, but not present in the incoming security header.
        /// </summary>
        internal static string EncryptedKeyTokenMissing {
            get {
                return ResourceManager.GetString("EncryptedKeyTokenMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The STS could not find an encryption token in the configuration for the scope specified by the client.
        /// </summary>
        internal static string EncryptionTokenForScopeMissing {
            get {
                return ResourceManager.GetString("EncryptionTokenForScopeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error!.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred. .
        /// </summary>
        internal static string GenericError {
            get {
                return ResourceManager.GetString("GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IdP specified in LogoutRequest {0} does not match IdP stored in session {1}..
        /// </summary>
        internal static string IdPMismatchBetweenRequestAndSession {
            get {
                return ResourceManager.GetString("IdPMismatchBetweenRequestAndSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value..
        /// </summary>
        internal static string IllFormedConfigAttribute {
            get {
                return ResourceManager.GetString("IllFormedConfigAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value..
        /// </summary>
        internal static string IllFormedConfigAttribute1 {
            get {
                return ResourceManager.GetString("IllFormedConfigAttribute1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input is not a valid {0} element because this attribute is unrecognized: {1}..
        /// </summary>
        internal static string InvalidAttributeParent {
            get {
                return ResourceManager.GetString("InvalidAttributeParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified authentication instant is in the future..
        /// </summary>
        internal static string InvalidAuthenticationInstant {
            get {
                return ResourceManager.GetString("InvalidAuthenticationInstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} does not derive from {1}.
        /// </summary>
        internal static string InvalidBaseType {
            get {
                return ResourceManager.GetString("InvalidBaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A child element was encountered in the following element and was not expected to be there:&lt;{0}&gt;..
        /// </summary>
        internal static string InvalidChildElement {
            get {
                return ResourceManager.GetString("InvalidChildElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input was not a valid {0} element because it contains more than one {1} child element..
        /// </summary>
        internal static string InvalidElementChildsQuantity {
            get {
                return ResourceManager.GetString("InvalidElementChildsQuantity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element must be of type: {0}: {1}..
        /// </summary>
        internal static string InvalidElementType {
            get {
                return ResourceManager.GetString("InvalidElementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Uri is not a valid format, please open the policy file and change the &apos;issuer&apos; attribute..
        /// </summary>
        internal static string InvalidIssuerUri {
            get {
                return ResourceManager.GetString("InvalidIssuerUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Uri is not a valid format, please open the policy file and change the &apos;issuer&apos; attribute..
        /// </summary>
        internal static string InvalidIssuerUri1 {
            get {
                return ResourceManager.GetString("InvalidIssuerUri1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The effective date (NotBefore) for the SAML token cannot be greater than the actual date.
        /// </summary>
        internal static string InvalidNotBeforeValue {
            get {
                return ResourceManager.GetString("InvalidNotBeforeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token has expired. The expiration date (NotOnOrAfter) for the SAML token is lower than the actual date.
        /// </summary>
        internal static string InvalidNotOnOrAfterValue {
            get {
                return ResourceManager.GetString("InvalidNotOnOrAfterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message does not contain a valid request..
        /// </summary>
        internal static string InvalidRequest {
            get {
                return ResourceManager.GetString("InvalidRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The built-in SamlTokenServiceHandler can only handle RequestSecurityToken messages, not RequestSecurityTokenResponse messages..
        /// </summary>
        internal static string InvalidRequestSecurityTokenMessage {
            get {
                return ResourceManager.GetString("InvalidRequestSecurityTokenMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a SAML Token..
        /// </summary>
        internal static string InvalidResponseSamlToken {
            get {
                return ResourceManager.GetString("InvalidResponseSamlToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a valid token..
        /// </summary>
        internal static string InvalidResponseToken {
            get {
                return ResourceManager.GetString("InvalidResponseToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a valid token..
        /// </summary>
        internal static string InvalidResponseToken1 {
            get {
                return ResourceManager.GetString("InvalidResponseToken1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is not a SAML {1} element..
        /// </summary>
        internal static string InvalidSamlElement {
            get {
                return ResourceManager.GetString("InvalidSamlElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result must be of type SecurityTokenServiceAsyncResult..
        /// </summary>
        internal static string InvalidSecurityTokenServiceAsyncResult {
            get {
                return ResourceManager.GetString("InvalidSecurityTokenServiceAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result must be of type SecurityTokenServiceAsyncResult..
        /// </summary>
        internal static string InvalidSecurityTokenServiceAsyncResult1 {
            get {
                return ResourceManager.GetString("InvalidSecurityTokenServiceAsyncResult1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result must be of type SecurityTokenServiceAsyncResult..
        /// </summary>
        internal static string InvalidSecurityTokenServiceAsyncResult2 {
            get {
                return ResourceManager.GetString("InvalidSecurityTokenServiceAsyncResult2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The securityToken argument was not of type {0}..
        /// </summary>
        internal static string InvalidSecurityTokenType {
            get {
                return ResourceManager.GetString("InvalidSecurityTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SAML token lifespan specified..
        /// </summary>
        internal static string InvalidTimespan {
            get {
                return ResourceManager.GetString("InvalidTimespan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The security token manager configured for the SamlToken token type must expose a non-null TokenCache property..
        /// </summary>
        internal static string InvalidTokenCacheProperty {
            get {
                return ResourceManager.GetString("InvalidTokenCacheProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The built-in SamlTokenServiceHandler can only handle requests for tokens with the following TokenType: {0}..
        /// </summary>
        internal static string InvalidTokenType {
            get {
                return ResourceManager.GetString("InvalidTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri {0} is not an wellformed absolute uri.
        /// </summary>
        internal static string InvalidWellformedAbsoluteUriString {
            get {
                return ResourceManager.GetString("InvalidWellformedAbsoluteUriString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SAML token must specify an issuer..
        /// </summary>
        internal static string IssuerMissing {
            get {
                return ResourceManager.GetString("IssuerMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A policy must be specified for communicating with the Security Token Service..
        /// </summary>
        internal static string IssuerPolicyMissing {
            get {
                return ResourceManager.GetString("IssuerPolicyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A policy must be specified for communicating with the Security Token Service..
        /// </summary>
        internal static string IssuerPolicyMissing1 {
            get {
                return ResourceManager.GetString("IssuerPolicyMissing1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No issuer SPN is defined for assertion {0}.
        /// </summary>
        internal static string IssuerSPNMissing {
            get {
                return ResourceManager.GetString("IssuerSPNMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saml token cannot be retreived on behalf of the calling Kerberos user since caller cannot be impersonated.
        /// </summary>
        internal static string KerberosWebUserCannotBeImpersonated {
            get {
                return ResourceManager.GetString("KerberosWebUserCannotBeImpersonated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified metadata directory &quot;{0}&quot; could not be located..
        /// </summary>
        internal static string MetadataLocationNotFound {
            get {
                return ResourceManager.GetString("MetadataLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata not found for idp endpoint with id {0}.
        /// </summary>
        internal static string MetadataNotFound {
            get {
                return ResourceManager.GetString("MetadataNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: attribute {0} of element {1}: {2} must have a value..
        /// </summary>
        internal static string NoAttributeValuePresent {
            get {
                return ResourceManager.GetString("NoAttributeValuePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: element {0}: {1} must have a value..
        /// </summary>
        internal static string NoElementValuePresent {
            get {
                return ResourceManager.GetString("NoElementValuePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: a SAML token may contain no more then one {0}: {1} element as a child of {2}..
        /// </summary>
        internal static string NoMoreThanOneXmlElement {
            get {
                return ResourceManager.GetString("NoMoreThanOneXmlElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token must contain a NSIS level..
        /// </summary>
        internal static string NSISLevelMissing {
            get {
                return ResourceManager.GetString("NSISLevelMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saml assertion does not have the required assurance level. Assurance level was: {0} and configured minimum assurance level was: {1}..
        /// </summary>
        internal static string NSISLevelTooLow {
            get {
                return ResourceManager.GetString("NSISLevelTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saml assertion does not have the required NSIS level. NSIS level was: {0} and demanded minimum NSIS level was: {1}..
        /// </summary>
        internal static string NSISLevelTooLowAccordingToDemand {
            get {
                return ResourceManager.GetString("NSISLevelTooLowAccordingToDemand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assertion with OneTimeUse condition detected more than once..
        /// </summary>
        internal static string OneTimeUseReplay {
            get {
                return ResourceManager.GetString("OneTimeUseReplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to instantiate policy extension of type {0}..
        /// </summary>
        internal static string PolicyExtensionInstanciateError {
            get {
                return ResourceManager.GetString("PolicyExtensionInstanciateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy extension with name &apos;{0}&apos; is not registered..
        /// </summary>
        internal static string PolicyExtensionNotRegistered {
            get {
                return ResourceManager.GetString("PolicyExtensionNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization policy for the method could not be found. User={0}; Service={1}; Action={2}.
        /// </summary>
        internal static string PolicyNotFound {
            get {
                return ResourceManager.GetString("PolicyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No authorization policy found for protected service {0} at token version {1}.
        /// </summary>
        internal static string PolicyNotFoundForService {
            get {
                return ResourceManager.GetString("PolicyNotFoundForService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} configuration element&apos;s value must be positive. The value found was {1}..
        /// </summary>
        internal static string PositiveValue {
            get {
                return ResourceManager.GetString("PositiveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proof key was calculated from entropy using unsupported algorithm..
        /// </summary>
        internal static string ProfKeyUnsupportedAlgorithm {
            get {
                return ResourceManager.GetString("ProfKeyUnsupportedAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proof key was calculated from entropy using unsupported algorithm..
        /// </summary>
        internal static string ProfKeyUnsupportedAlgorithm1 {
            get {
                return ResourceManager.GetString("ProfKeyUnsupportedAlgorithm1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proof key was calculated from entropy using unsupported algorithm..
        /// </summary>
        internal static string ProfKeyUnsupportedAlgorithm2 {
            get {
                return ResourceManager.GetString("ProfKeyUnsupportedAlgorithm2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} is readonly .
        /// </summary>
        internal static string ReadOnlyProperty {
            get {
                return ResourceManager.GetString("ReadOnlyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection requirements not satisfied.
        /// </summary>
        internal static string RequerimentsNotSatisfied {
            get {
                return ResourceManager.GetString("RequerimentsNotSatisfied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection requirements not satisfied.
        /// </summary>
        internal static string RequerimentsNotSatisfied1 {
            get {
                return ResourceManager.GetString("RequerimentsNotSatisfied1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RST entropy has to be at least 16 bytes long..
        /// </summary>
        internal static string RequestEntropyInvalidLength {
            get {
                return ResourceManager.GetString("RequestEntropyInvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RST entropy has to be at least 16 bytes long..
        /// </summary>
        internal static string RequestEntropyInvalidLength1 {
            get {
                return ResourceManager.GetString("RequestEntropyInvalidLength1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RST entropy has to be at least 16 bytes long..
        /// </summary>
        internal static string RequestEntropyInvalidLength2 {
            get {
                return ResourceManager.GetString("RequestEntropyInvalidLength2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve RequestSecurityToken..
        /// </summary>
        internal static string RequestSecurityTokenRetrieveError {
            get {
                return ResourceManager.GetString("RequestSecurityTokenRetrieveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve RequestSecurityToken..
        /// </summary>
        internal static string RequestSecurityTokenRetrieveError1 {
            get {
                return ResourceManager.GetString("RequestSecurityTokenRetrieveError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve RequestSecurityToken..
        /// </summary>
        internal static string RequestSecurityTokenRetrieveError2 {
            get {
                return ResourceManager.GetString("RequestSecurityTokenRetrieveError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fail to retrieve RequestSoapContext.
        /// </summary>
        internal static string RequestSoapContextRetrieveError {
            get {
                return ResourceManager.GetString("RequestSoapContextRetrieveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a proof key..
        /// </summary>
        internal static string ResponseProfKeyMissing {
            get {
                return ResourceManager.GetString("ResponseProfKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a proof key..
        /// </summary>
        internal static string ResponseProfKeyMissing1 {
            get {
                return ResourceManager.GetString("ResponseProfKeyMissing1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Response does not contain a proof key..
        /// </summary>
        internal static string ResponseProfKeyMissing2 {
            get {
                return ResourceManager.GetString("ResponseProfKeyMissing2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SamlNameIdentifier must have a format..
        /// </summary>
        internal static string SamlNameIdentifierInvalidFormat {
            get {
                return ResourceManager.GetString("SamlNameIdentifierInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SamlNameIdentifier must have a value..
        /// </summary>
        internal static string SamlNameIdentifierInvalidValue {
            get {
                return ResourceManager.GetString("SamlNameIdentifierInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SamlSubject does not contain a key..
        /// </summary>
        internal static string SamlSubjectKeyMissing {
            get {
                return ResourceManager.GetString("SamlSubjectKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SamlSubject must specify a confirmation method..
        /// </summary>
        internal static string SamlSubjectMissingConfirmationMethod {
            get {
                return ResourceManager.GetString("SamlSubjectMissingConfirmationMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SamlSubject must contain a SamlNameIdentifier..
        /// </summary>
        internal static string SamlSubjectNameMissing {
            get {
                return ResourceManager.GetString("SamlSubjectNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token has expired..
        /// </summary>
        internal static string SamlTokenExpired {
            get {
                return ResourceManager.GetString("SamlTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SamlToken is expected but not present in the security header of the incoming message..
        /// </summary>
        internal static string SamlTokenMissing {
            get {
                return ResourceManager.GetString("SamlTokenMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An appropriate token for authorization could not be found..
        /// </summary>
        internal static string SamlTokenNotFound {
            get {
                return ResourceManager.GetString("SamlTokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Security requirements are not satisfied because the security header is not present in the incoming message..
        /// </summary>
        internal static string SecurityHeadersMissing {
            get {
                return ResourceManager.GetString("SecurityHeadersMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A server token is required for SamlToken Service. This token is used to sign outgoing RequestSecurityTokenResponse messages and is configured by the &lt;serverToken&gt; configuration element..
        /// </summary>
        internal static string ServerTokenMissing {
            get {
                return ResourceManager.GetString("ServerTokenMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created Service Input Filter for {0}.
        /// </summary>
        internal static string ServiceInputFilterCreated {
            get {
                return ResourceManager.GetString("ServiceInputFilterCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  is a child element of Safewhere.SAML20Federation..
        /// </summary>
        internal static string ServiceProviderNotSet {
            get {
                return ResourceManager.GetString("ServiceProviderNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signature of the incoming message is invalid..
        /// </summary>
        internal static string SignatureInvalid {
            get {
                return ResourceManager.GetString("SignatureInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no signature present in the incoming message..
        /// </summary>
        internal static string SignatureNotPresent {
            get {
                return ResourceManager.GetString("SignatureNotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Saml token must contain a subject..
        /// </summary>
        internal static string SubjectMissing {
            get {
                return ResourceManager.GetString("SubjectMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: the &lt;{0}&gt;&lt;{2}&gt; and the &lt;{1}&gt;&lt;{2}&gt; elements must be the same..
        /// </summary>
        internal static string SubjectXmlError {
            get {
                return ResourceManager.GetString("SubjectXmlError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base token does not have an identity..
        /// </summary>
        internal static string TokenIdentityMissing {
            get {
                return ResourceManager.GetString("TokenIdentityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SamlTokenBuilder has not been initialized to construct a token..
        /// </summary>
        internal static string TokenNotConstructed {
            get {
                return ResourceManager.GetString("TokenNotConstructed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Safewhere security token could not be issued..
        /// </summary>
        internal static string TokenNotIssued {
            get {
                return ResourceManager.GetString("TokenNotIssued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The base token does not have a principal..
        /// </summary>
        internal static string TokenPrincipalMissing {
            get {
                return ResourceManager.GetString("TokenPrincipalMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve token for service: {0}..
        /// </summary>
        internal static string TokenRetrieveError {
            get {
                return ResourceManager.GetString("TokenRetrieveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No type implementing the token named &apos;{0}&apos; could be found..
        /// </summary>
        internal static string TokenTypeNotFound {
            get {
                return ResourceManager.GetString("TokenTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No token version claim found in saml token.
        /// </summary>
        internal static string TokenVersionMissing {
            get {
                return ResourceManager.GetString("TokenVersionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding &quot;{0}&quot; is not supported..
        /// </summary>
        internal static string UnknownEncoding {
            get {
                return ResourceManager.GetString("UnknownEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received an assertion from an untrusted identity provider..
        /// </summary>
        internal static string UnknownIDP {
            get {
                return ResourceManager.GetString("UnknownIDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine the IDP that logged you in. You have been logged out of your local session..
        /// </summary>
        internal static string UnknownLoginIDP {
            get {
                return ResourceManager.GetString("UnknownLoginIDP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to process samlResponse. Unknown response type..
        /// </summary>
        internal static string UnknownResponse {
            get {
                return ResourceManager.GetString("UnknownResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RequestType &quot;{0}&quot; is not supported..
        /// </summary>
        internal static string UnsupportedRequestType {
            get {
                return ResourceManager.GetString("UnsupportedRequestType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token type {0} is not supported.
        /// </summary>
        internal static string UnsupportedTokenTypeReturned {
            get {
                return ResourceManager.GetString("UnsupportedTokenTypeReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: the {0} attribute is not supported on the {1}: {2} element in the SAML token..
        /// </summary>
        internal static string UnsupportedXmlAttribute {
            get {
                return ResourceManager.GetString("UnsupportedXmlAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xml error: the {0}: {1} child of the {2} element is not supported in the SAML token..
        /// </summary>
        internal static string UnsupportedXmlElement {
            get {
                return ResourceManager.GetString("UnsupportedXmlElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token was signed by an untrusted certificate [{0}] by a security token service in a trusted realm: {1}.
        /// </summary>
        internal static string UntrustedCertificateForFederationSTS {
            get {
                return ResourceManager.GetString("UntrustedCertificateForFederationSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token was signed by a security token service from an untrusted realm: {0}.
        /// </summary>
        internal static string UntrustedFederationSTS {
            get {
                return ResourceManager.GetString("UntrustedFederationSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAML token was signed by an untrusted security token service.
        /// </summary>
        internal static string UntrustedSTS {
            get {
                return ResourceManager.GetString("UntrustedSTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SAMLtoken cannot be automatically issued when using username/password authentication.
        /// </summary>
        internal static string UsernameAndPasswordMissing {
            get {
                return ResourceManager.GetString("UsernameAndPasswordMissing", resourceCulture);
            }
        }
    }
}
