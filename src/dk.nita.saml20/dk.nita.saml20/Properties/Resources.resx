<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessDenied" xml:space="preserve">
    <value>Access Denied</value>
  </data>
  <data name="AccessDeniedAzRuleGrantMissing" xml:space="preserve">
    <value>ACCESS DENIED: The value for a required authorization rule grant was missing or empty.  User={0}; Service={1}; Method={2}; CapabilityValue={3}; AzRule={4}; Argument={5}</value>
  </data>
  <data name="AccessDeniedAzRuleResultFalse" xml:space="preserve">
    <value>ACCESS DENIED: Evaluation of an authorization rule returned 'false'. User={0}; Service={1}; Method={2}; Capability/AzRule={3}</value>
  </data>
  <data name="AccessDeniedEveryoneAccessDisallowed" xml:space="preserve">
    <value>ACCESS DENIED: There are no required capabilities defined for the service {0} and default access for everyone is disallowed</value>
  </data>
  <data name="AccessDeniedRequiredCapabilityMissing" xml:space="preserve">
    <value>ACCESS DENIED: The caller does not have a required capability. User={0}; Service={1}; Method={2}; Capability={3}</value>
  </data>
  <data name="AccessDeniedTokenVersionNotAllowed" xml:space="preserve">
    <value>ACCESS DENIED: Expected tokenversion {2} actual tokenversion {3}. 
User={0}
AppID={1}</value>
  </data>
  <data name="AccessGranted" xml:space="preserve">
    <value>AUDIT: Service method invoked. User={0}; Service={1}; Method={2}</value>
  </data>
  <data name="AssertionExpired" xml:space="preserve">
    <value>Assertion is no longer valid.</value>
  </data>
  <data name="AssuranceLevelTooLow" xml:space="preserve">
    <value>Saml assertion does not have the required assurance level. Assurance level was: {0} and configured minimum assurance level was: {1}.</value>
  </data>
  <data name="AssertionIDAttributeMissing" xml:space="preserve">
    <value>A SAML token must have an AssertionID.</value>
  </data>
  <data name="AttributeMissing" xml:space="preserve">
    <value>Xml error: {0} attribute is required on {1}: {2} element.</value>
  </data>
  <data name="AttributeXmlError" xml:space="preserve">
    <value>Xml error: attribute value not specified for SAML attribute {0}: {1}.</value>
  </data>
  <data name="AuthenticationInstantMissing" xml:space="preserve">
    <value>A SAML token must specify an authentication instant.</value>
  </data>
  <data name="AuthenticationMethodMissing" xml:space="preserve">
    <value>A SAML token must have an authentication method.</value>
  </data>
  <data name="BaseTokenNotSupported" xml:space="preserve">
    <value>The request for a SAML token contained a base token of an unsupported type.</value>
  </data>
  <data name="BindingError" xml:space="preserve">
    <value>An errror occurred. No known binding has been registered for this endpoint.</value>
  </data>
  <data name="ChooseDesc" xml:space="preserve">
    <value>Please choose the identity provider of your choice from the list below:</value>
  </data>
  <data name="ChooseIDP" xml:space="preserve">
    <value>Choose Identity Provider</value>
  </data>
  <data name="ConditionsMissing" xml:space="preserve">
    <value>A Saml token must contain conditions.</value>
  </data>
  <data name="ConfigurationElementMissing" xml:space="preserve">
    <value>Configuration element {0} under configuration element {1} missing in config file</value>
  </data>
  <data name="ConfigurationSectionError" xml:space="preserve">
    <value>There was an error loading the WseSaml configuration section.</value>
  </data>
  <data name="ConfigurationSectionMissing" xml:space="preserve">
    <value>Configuration section {0} missing in config file</value>
  </data>
  <data name="ConfigurationSectionNotInitialized" xml:space="preserve">
    <value>The static members of the WebServicesConfiguration class cannot be accessed, because the WseSaml configuration section handler has not finished initializing.</value>
  </data>
  <data name="CreatePolicyCacheDirError" xml:space="preserve">
    <value>Unable to create the policy cache directory. Ensure that the directory {0} exists and that the service account has full access to it</value>
  </data>
  <data name="CustomAppliesToMissing" xml:space="preserve">
    <value>A custom URI must be specified in the 'issuerCustomAppliesTo' attribute when the 'issuerAppliesToType' is set to 'custom'. </value>
  </data>
  <data name="CustomAppliesToMissing1" xml:space="preserve">
    <value>A custom URI must be specified in the 'issuerCustomAppliesTo' attribute when the 'issuerAppliesToType' is set to 'custom'. </value>
  </data>
  <data name="DataEncryptionTokenSupport" xml:space="preserve">
    <value>The RequestSecurityToken message must be signed with a token which supports Data Encryption since the SamlTokenService uses that signing token to encrypt the key.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DefaultStyle" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Protocol\Resources\DefaultStyle.css;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="DuplicateEncryptedKeyToken" xml:space="preserve">
    <value>More than one EncryptedKeyToken is present in the security header of the incoming message, but only one was expected.</value>
  </data>
  <data name="DuplicateSamlFederationToken" xml:space="preserve">
    <value>More than one SamlFederationToken is present in the security header of the incoming message, but only one was expected.</value>
  </data>
  <data name="DuplicateSamlToken" xml:space="preserve">
    <value>More than one SamlToken is present in the security header of the incoming message, but only one was expected.</value>
  </data>
  <data name="ElementMissing" xml:space="preserve">
    <value>Xml error: a SAML token must contain a {0}:{1} element as a child of {2}: {3}.</value>
  </data>
  <data name="ElementsOutOfOrder" xml:space="preserve">
    <value>Xml error: the children of the {0}: {1} element are not in proper order.</value>
  </data>
  <data name="EncryptedKeyTokenMissing" xml:space="preserve">
    <value>EncryptedKeyToken is expected in the active SAML federation scenario, but not present in the incoming security header</value>
  </data>
  <data name="EncryptionTokenForScopeMissing" xml:space="preserve">
    <value>The STS could not find an encryption token in the configuration for the scope specified by the client</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="GenericError" xml:space="preserve">
    <value>An error has occurred. </value>
  </data>
  <data name="IllFormedConfigAttribute" xml:space="preserve">
    <value>The attribute '{0}' is missing, incorretly formatted, or contains an usupported value.</value>
  </data>
  <data name="IllFormedConfigAttribute1" xml:space="preserve">
    <value>The attribute '{0}' is missing, incorretly formatted, or contains an usupported value.</value>
  </data>
  <data name="InvalidAttributeParent" xml:space="preserve">
    <value>The input is not a valid {0} element because this attribute is unrecognized: {1}.</value>
  </data>
  <data name="InvalidAuthenticationInstant" xml:space="preserve">
    <value>The specified authentication instant is in the future.</value>
  </data>
  <data name="InvalidBaseType" xml:space="preserve">
    <value>Type {0} does not derive from {1}</value>
  </data>
  <data name="InvalidChildElement" xml:space="preserve">
    <value>A child element was encountered in the following element and was not expected to be there:&lt;{0}&gt;.</value>
  </data>
  <data name="InvalidElementChildsQuantity" xml:space="preserve">
    <value>The input was not a valid {0} element because it contains more than one {1} child element.</value>
  </data>
  <data name="InvalidElementType" xml:space="preserve">
    <value>Element must be of type: {0}: {1}.</value>
  </data>
  <data name="InvalidIssuerUri" xml:space="preserve">
    <value>The Uri is not a valid format, please open the policy file and change the 'issuer' attribute.</value>
  </data>
  <data name="InvalidIssuerUri1" xml:space="preserve">
    <value>The Uri is not a valid format, please open the policy file and change the 'issuer' attribute.</value>
  </data>
  <data name="InvalidNotBeforeValue" xml:space="preserve">
    <value>The effective date (NotBefore) for the SAML token cannot be greater than the actual date</value>
  </data>
  <data name="InvalidNotOnOrAfterValue" xml:space="preserve">
    <value>The SAML token has expired. The expiration date (NotOnOrAfter) for the SAML token is lower than the actual date</value>
  </data>
  <data name="InvalidRequest" xml:space="preserve">
    <value>The message does not contain a valid request.</value>
  </data>
  <data name="InvalidRequestSecurityTokenMessage" xml:space="preserve">
    <value>The built-in SamlTokenServiceHandler can only handle RequestSecurityToken messages, not RequestSecurityTokenResponse messages.</value>
  </data>
  <data name="InvalidResponseSamlToken" xml:space="preserve">
    <value>Response does not contain a SAML Token.</value>
  </data>
  <data name="InvalidResponseToken" xml:space="preserve">
    <value>Response does not contain a valid token.</value>
  </data>
  <data name="InvalidResponseToken1" xml:space="preserve">
    <value>Response does not contain a valid token.</value>
  </data>
  <data name="InvalidSamlElement" xml:space="preserve">
    <value>Parameter '{0}' is not a SAML {1} element.</value>
  </data>
  <data name="InvalidSecurityTokenServiceAsyncResult" xml:space="preserve">
    <value>Result must be of type SecurityTokenServiceAsyncResult.</value>
  </data>
  <data name="InvalidSecurityTokenServiceAsyncResult1" xml:space="preserve">
    <value>Result must be of type SecurityTokenServiceAsyncResult.</value>
  </data>
  <data name="InvalidSecurityTokenServiceAsyncResult2" xml:space="preserve">
    <value>Result must be of type SecurityTokenServiceAsyncResult.</value>
  </data>
  <data name="InvalidSecurityTokenType" xml:space="preserve">
    <value>The securityToken argument was not of type {0}.</value>
  </data>
  <data name="InvalidTimespan" xml:space="preserve">
    <value>Invalid SAML token lifespan specified.</value>
  </data>
  <data name="InvalidTokenCacheProperty" xml:space="preserve">
    <value>The security token manager configured for the SamlToken token type must expose a non-null TokenCache property.</value>
  </data>
  <data name="InvalidTokenType" xml:space="preserve">
    <value>The built-in SamlTokenServiceHandler can only handle requests for tokens with the following TokenType: {0}.</value>
  </data>
  <data name="InvalidWellformedAbsoluteUriString" xml:space="preserve">
    <value>The uri {0} is not an wellformed absolute uri</value>
  </data>
  <data name="IssuerMissing" xml:space="preserve">
    <value>A SAML token must specify an issuer.</value>
  </data>
  <data name="IssuerPolicyMissing" xml:space="preserve">
    <value>A policy must be specified for communicating with the Security Token Service.</value>
  </data>
  <data name="IssuerPolicyMissing1" xml:space="preserve">
    <value>A policy must be specified for communicating with the Security Token Service.</value>
  </data>
  <data name="IssuerSPNMissing" xml:space="preserve">
    <value>No issuer SPN is defined for assertion {0}</value>
  </data>
  <data name="KerberosWebUserCannotBeImpersonated" xml:space="preserve">
    <value>Saml token cannot be retreived on behalf of the calling Kerberos user since caller cannot be impersonated</value>
  </data>
  <data name="MetadataLocationNotFound" xml:space="preserve">
    <value>The specified metadata directory "{0}" could not be located.</value>
  </data>
  <data name="MetadataNotFound" xml:space="preserve">
    <value>Metadata not found for idp endpoint with id {0}</value>
  </data>
  <data name="NoAttributeValuePresent" xml:space="preserve">
    <value>Xml error: attribute {0} of element {1}: {2} must have a value.</value>
  </data>
  <data name="NoElementValuePresent" xml:space="preserve">
    <value>Xml error: element {0}: {1} must have a value.</value>
  </data>
  <data name="NoMoreThanOneXmlElement" xml:space="preserve">
    <value>Xml error: a SAML token may contain no more then one {0}: {1} element as a child of {2}.</value>
  </data>
  <data name="OneTimeUseReplay" xml:space="preserve">
    <value>Assertion with OneTimeUse condition detected more than once.</value>
  </data>
  <data name="PolicyExtensionInstanciateError" xml:space="preserve">
    <value>Unable to instantiate policy extension of type {0}.</value>
  </data>
  <data name="PolicyExtensionNotRegistered" xml:space="preserve">
    <value>Policy extension with name '{0}' is not registered.</value>
  </data>
  <data name="PolicyNotFound" xml:space="preserve">
    <value>Authorization policy for the method could not be found. User={0}; Service={1}; Action={2}</value>
  </data>
  <data name="PolicyNotFoundForService" xml:space="preserve">
    <value>No authorization policy found for protected service {0} at token version {1}</value>
  </data>
  <data name="PositiveValue" xml:space="preserve">
    <value>The {0} configuration element's value must be positive. The value found was {1}.</value>
  </data>
  <data name="ProfKeyUnsupportedAlgorithm" xml:space="preserve">
    <value>Proof key was calculated from entropy using unsupported algorithm.</value>
  </data>
  <data name="ProfKeyUnsupportedAlgorithm1" xml:space="preserve">
    <value>Proof key was calculated from entropy using unsupported algorithm.</value>
  </data>
  <data name="ProfKeyUnsupportedAlgorithm2" xml:space="preserve">
    <value>Proof key was calculated from entropy using unsupported algorithm.</value>
  </data>
  <data name="ReadOnlyProperty" xml:space="preserve">
    <value>The property {0} is readonly </value>
  </data>
  <data name="RequerimentsNotSatisfied" xml:space="preserve">
    <value>Protection requirements not satisfied</value>
  </data>
  <data name="RequerimentsNotSatisfied1" xml:space="preserve">
    <value>Protection requirements not satisfied</value>
  </data>
  <data name="RequestEntropyInvalidLength" xml:space="preserve">
    <value>The RST entropy has to be at least 16 bytes long.</value>
  </data>
  <data name="RequestEntropyInvalidLength1" xml:space="preserve">
    <value>The RST entropy has to be at least 16 bytes long.</value>
  </data>
  <data name="RequestEntropyInvalidLength2" xml:space="preserve">
    <value>The RST entropy has to be at least 16 bytes long.</value>
  </data>
  <data name="RequestSecurityTokenRetrieveError" xml:space="preserve">
    <value>Failed to retrieve RequestSecurityToken.</value>
  </data>
  <data name="RequestSecurityTokenRetrieveError1" xml:space="preserve">
    <value>Failed to retrieve RequestSecurityToken.</value>
  </data>
  <data name="RequestSecurityTokenRetrieveError2" xml:space="preserve">
    <value>Failed to retrieve RequestSecurityToken.</value>
  </data>
  <data name="RequestSoapContextRetrieveError" xml:space="preserve">
    <value>Fail to retrieve RequestSoapContext</value>
  </data>
  <data name="ResponseProfKeyMissing" xml:space="preserve">
    <value>Response does not contain a proof key.</value>
  </data>
  <data name="ResponseProfKeyMissing1" xml:space="preserve">
    <value>Response does not contain a proof key.</value>
  </data>
  <data name="ResponseProfKeyMissing2" xml:space="preserve">
    <value>Response does not contain a proof key.</value>
  </data>
  <data name="SamlNameIdentifierInvalidFormat" xml:space="preserve">
    <value>A SamlNameIdentifier must have a format.</value>
  </data>
  <data name="SamlNameIdentifierInvalidValue" xml:space="preserve">
    <value>A SamlNameIdentifier must have a value.</value>
  </data>
  <data name="SamlSubjectKeyMissing" xml:space="preserve">
    <value>SamlSubject does not contain a key.</value>
  </data>
  <data name="SamlSubjectMissingConfirmationMethod" xml:space="preserve">
    <value>A SamlSubject must specify a confirmation method.</value>
  </data>
  <data name="SamlSubjectNameMissing" xml:space="preserve">
    <value>A SamlSubject must contain a SamlNameIdentifier.</value>
  </data>
  <data name="SamlTokenExpired" xml:space="preserve">
    <value>The SAML token has expired.</value>
  </data>
  <data name="SamlTokenMissing" xml:space="preserve">
    <value>SamlToken is expected but not present in the security header of the incoming message.</value>
  </data>
  <data name="SamlTokenNotFound" xml:space="preserve">
    <value>An appropriate token for authorization could not be found.</value>
  </data>
  <data name="SecurityHeadersMissing" xml:space="preserve">
    <value>Security requirements are not satisfied because the security header is not present in the incoming message.</value>
  </data>
  <data name="ServerTokenMissing" xml:space="preserve">
    <value>A server token is required for SamlToken Service. This token is used to sign outgoing RequestSecurityTokenResponse messages and is configured by the &lt;serverToken&gt; configuration element.</value>
  </data>
  <data name="ServiceInputFilterCreated" xml:space="preserve">
    <value>Created Service Input Filter for {0}</value>
  </data>
  <data name="ServiceProviderNotSet" xml:space="preserve">
    <value> is a child element of Safewhere.SAML20Federation.</value>
  </data>
  <data name="SignatureInvalid" xml:space="preserve">
    <value>The signature of the incoming message is invalid.</value>
  </data>
  <data name="SignatureNotPresent" xml:space="preserve">
    <value>There is no signature present in the incoming message.</value>
  </data>
  <data name="SubjectMissing" xml:space="preserve">
    <value>A Saml token must contain a subject.</value>
  </data>
  <data name="SubjectXmlError" xml:space="preserve">
    <value>Xml error: the &lt;{0}&gt;&lt;{2}&gt; and the &lt;{1}&gt;&lt;{2}&gt; elements must be the same.</value>
  </data>
  <data name="TokenIdentityMissing" xml:space="preserve">
    <value>The base token does not have an identity.</value>
  </data>
  <data name="TokenNotConstructed" xml:space="preserve">
    <value>The SamlTokenBuilder has not been initialized to construct a token.</value>
  </data>
  <data name="TokenNotIssued" xml:space="preserve">
    <value>A Safewhere security token could not be issued.</value>
  </data>
  <data name="TokenPrincipalMissing" xml:space="preserve">
    <value>The base token does not have a principal.</value>
  </data>
  <data name="TokenRetrieveError" xml:space="preserve">
    <value>Could not retrieve token for service: {0}.</value>
  </data>
  <data name="TokenTypeNotFound" xml:space="preserve">
    <value>No type implementing the token named '{0}' could be found.</value>
  </data>
  <data name="TokenVersionMissing" xml:space="preserve">
    <value>No token version claim found in saml token</value>
  </data>
  <data name="UnknownEncoding" xml:space="preserve">
    <value>Encoding "{0}" is not supported.</value>
  </data>
  <data name="UnknownIDP" xml:space="preserve">
    <value>Received an assertion from an untrusted identity provider.</value>
  </data>
  <data name="UnknownLoginIDP" xml:space="preserve">
    <value>Unable to determine the IDP that logged you in. You have been logged out of your local session.</value>
  </data>
  <data name="UnknownResponse" xml:space="preserve">
    <value>Unable to process samlResponse. Unknown response type.</value>
  </data>
  <data name="UnsupportedRequestType" xml:space="preserve">
    <value>RequestType "{0}" is not supported.</value>
  </data>
  <data name="IdPMismatchBetweenRequestAndSession" xml:space="preserve">
    <value>IdP specified in LogoutRequest {0} does not match IdP stored in session {1}.</value>
  </data>
  <data name="UnsupportedTokenTypeReturned" xml:space="preserve">
    <value>Token type {0} is not supported</value>
  </data>
  <data name="UnsupportedXmlAttribute" xml:space="preserve">
    <value>Xml error: the {0} attribute is not supported on the {1}: {2} element in the SAML token.</value>
  </data>
  <data name="UnsupportedXmlElement" xml:space="preserve">
    <value>Xml error: the {0}: {1} child of the {2} element is not supported in the SAML token.</value>
  </data>
  <data name="UntrustedCertificateForFederationSTS" xml:space="preserve">
    <value>The SAML token was signed by an untrusted certificate [{0}] by a security token service in a trusted realm: {1}</value>
  </data>
  <data name="UntrustedFederationSTS" xml:space="preserve">
    <value>The SAML token was signed by a security token service from an untrusted realm: {0}</value>
  </data>
  <data name="UntrustedSTS" xml:space="preserve">
    <value>The SAML token was signed by an untrusted security token service</value>
  </data>
  <data name="UsernameAndPasswordMissing" xml:space="preserve">
    <value>The SAMLtoken cannot be automatically issued when using username/password authentication</value>
  </data>
</root>